
######## This does not work yet, working on it. 
import mysql.connector
import csv

conn = mysql.connector.connect(
    host='manticoresearch',
    port=9306,
    user='',
    password='',
    database='Manticore'
)

cursor = conn.cursor()

# Create list that will store all the SQL insert commands
sql_insert_commands = []

# The embeddings.csv file will contain the following columns:
# id, title, embedding
# 15,Autour d'une cabine,"(-0.05206402, 0.05769499, ... -0.04620804, 0.05950261, -0.02039390, -0.04441112)"
#
# In the example above, the embedding is truncated for brevity. It will hold 384 float values.
# Also the title has a single quote that needs to be escaped. Not every title will have a single quote
# but this is just an example of how to handle it.
with open('/app/data/embeddings.csv', 'r') as file:
    reader = csv.reader(file)
    next(reader)  
    for row in reader:
        # Extract the values from the CSV row.
        # Clean title by escaping single quotes. If the title has
        # other special characters, they should be escaped as well.
        # By special characters, I mean characters that will break the SQL syntax.
        # I don't handle embedding_str because the content is okay as is. It already
        # include the parentheses and commas.
        id = int(row[0]) 
        title = row[1].replace("'", "\\'")
        embedding_str = row[2]  

        # Here I simplify things by using string formatting to build the SQL query.
        # This was easier because the embeddings are collections of floats. The list of values
        # that was used in executemany-function earlier can be tricky. It usually works with
        # simple values like integers and strings but can be problematic with more complex data.
        #
        # If you put break keyword after the append below and print the query, you can see 
        # the query that will be executed. This is just formatting the valid SQL query.
        # When the query is formatted, it will be put into list of queries that will be executed.
        query = "INSERT INTO movies (id, title, embedding) VALUES (%s, '%s', %s)" % (id, title, embedding_str)
        sql_insert_commands.append(query)

# Exceute all the SQL insert commands
for command in sql_insert_commands:
    cursor.execute(command)

# Commit the transaction to the database
conn.commit()

cursor.close()
conn.close()





########## I wanted to only upload id and title 
########## but it uploads embedding in the title section and generates its own id
########## and the embedding is filled with 0 values. 

# import pandas as pd
# import mysql.connector
# import re

# def insert_data_from_csv(csv_file_path):

#     conn = mysql.connector.connect(
#         host='manticoresearch',
#         port=9306,
#         user='sarafarahabadi',
#         password='Mj@0018238726',
#         database='Manticore'
#     )
#     cursor = conn.cursor()

#     # Read the CSV file, treating the first row as a header
#     df = pd.read_csv(csv_file_path, header=0, names=['id', 'title'])

#     query = "INSERT INTO movies (id, title) VALUES (%s, %s)"

#     # Iterate over each row in the DataFrame
#     for index, row in df.iterrows():
#         id_value = row['id']
#         title_value = row['title']

#         cursor.execute(query, (id_value, title_value))

#     conn.commit()

#     cursor.close()
#     conn.close()

#     print("Data inserted successfully into Manticore!")

# csv_file_path = '/app/data/embeddings.csv'  
# insert_data_from_csv(csv_file_path)





########### hard-coding the data to insert into the Manticore table which works 

# import mysql.connector

# conn = mysql.connector.connect(
#     host='manticoresearch',
#     port=9306,
#     user='sarafarahabadi',
#     password='Mj@0018238726',
#     database='Manticore'
# )
# cursor = conn.cursor()

# id = 1  
# title = 'testing'
# embedding = "(-0.0641787201166153, -0.004193063825368881, -0.06320688128471375, 0.06392887979745865, -0.08582580089569092, 0.03422245755791664, 0.09171301126480103, 0.06550819426774979, -0.001874950947239995, 0.02786422334611416, -0.013586451299488544, -0.07613880932331085, 0.06361398100852966, 0.022118911147117615, 0.006812038365751505, 0.06106545403599739, 0.08229974657297134, -0.027893489226698875, -0.02931036427617073, 0.06684108823537827, -0.01887626014649868, -0.013747991062700748, 0.0069344607181847095, 0.09658286720514297, 0.01367267407476902, 0.03901856020092964, 0.0006840003770776093, 0.012513055466115475, -0.07250522077083588, -0.03190210461616516, 0.03545790910720825, -0.001525878207758069, 0.007024968508630991, -0.01904142089188099, 0.03813661262392998, -0.02660336345434189, -0.022923098877072334, -0.06876873224973679, 0.021950215101242065, 0.07381673157215118, -0.10091294348239899, -0.013428039848804474, -0.08660510182380676, 0.01024527195841074, 0.02121620811522007, -0.1011882945895195, 0.03479105606675148, 0.10868766158819199, 0.05355731025338173, -0.01759937033057213, -0.04168034344911575, -0.043278153985738754, -0.05099399760365486, -0.015803702175617218, 0.008731638081371784, 0.053149305284023285, 0.03454508259892464, -0.03853737935423851, 0.07114196568727493, 0.06577891856431961, 0.07612236589193344, 0.04751837998628616, -0.01685367524623871, 0.03547453135251999, -0.003079154761508107, -0.05549376830458641, -0.004502270836383104, 0.040837571024894714, 0.04072161018848419, -0.02462863363325596, 0.008464982733130455, 0.0027271888684481382, 0.036771539598703384, 0.02912159264087677, 0.01741473376750946, -0.06089497357606888, 0.06940042227506638, -0.0022302649449557066, -0.03601323813199997, -0.00647010188549757, -0.029331674799323082, -0.0923098772764206, -0.003858342533931136, -0.06674175709486008, 0.021756820380687714, 0.06042657047510147, 0.05013503134250641, -0.017471609637141228, 0.017381183803081512, -0.0018833018839359283, -0.07120894640684128, 0.012377917766571045, 0.014078347943723202, -0.0036670903209596872, -0.10196903347969055, -0.10409029573202133, 0.06947967410087585, -0.06702819466590881, -0.01404519472271204, 0.1766735315322876, 0.0015762470429763198, -0.0016759359277784824, 0.06944457441568375, -0.001199662103317678, -0.049768079072237015, 0.04567895457148552, 0.018255243077874184, 0.0458010695874691, -0.0004264188464730978, -0.022479325532913208, -0.031074589118361473, -0.012804538942873478, -0.05609091743826866, 0.07750091701745987, 0.006275836378335953, 0.14722202718257904, 0.015677837654948235, -0.03954492136836052, 0.008792244829237461, 0.011134560219943523, 0.05293573811650276, 0.024856597185134888, -0.025894353166222572, 0.010574485175311565, -0.008609384298324585, -0.023833120241761208, 0.033791132271289825, -1.85190300397321e-33, 0.02518773265182972, 0.00018657775945030153, 0.024012545123696327, 0.0018667102558538318, 0.04622995853424072, 0.06660842150449753, -0.03944385424256325, -0.03789032995700836, -0.03975835070014, 0.04799220710992813, -0.025537416338920593, 0.014831322245299816, -0.044603001326322556, 0.06999024003744125, 0.021346306428313255, 0.10937108844518661, -0.08542025834321976, 0.01199408434331417, 0.008448022417724133, 0.08528918027877808, -0.012239934876561165, 0.07484886050224304, 0.058461785316467285, 0.038328323513269424, -0.02574591338634491, 0.03248037397861481, 0.01978883147239685, -0.021317899227142334, 0.07427280396223068, 0.053456056863069534, 0.011054117232561111, -0.00292185484431684, -0.019940171390771866, -0.044112712144851685, 0.016658326610922813, -0.011931436136364937, -0.00263200793415308, -0.08320976793766022, -0.014484642073512077, 0.04090941324830055, 0.016707642003893852, 0.044758882373571396, -0.044995538890361786, 0.040364574640989304, -0.019185245037078857, 0.019292935729026794, 0.07200391590595245, 0.024479838088154793, 0.009314889088273048, -0.027713241055607796, -0.06473004817962646, -0.03243245929479599, -0.03767267242074013, 0.07444304972887039, -0.04124904423952103, 0.01247599720954895, -0.009184788912534714, -0.0120126623660326, 0.07514844089746475, -0.07784781605005264, 0.07196985930204391, 0.058099765330553055, -0.004139885306358337, -0.05897391587495804, -0.009891978465020657, -0.04111558571457863, 0.05366787314414978, 0.020778769627213478, 0.13111822307109833, -0.0610182024538517, -0.07350875437259674, 0.004090712871402502, 0.06305988878011703, 0.1180337518453598, 0.003881756216287613, -0.05391840636730194, -0.02192719466984272, 0.04949350655078888, -0.04825228452682495, 0.03872981667518616, -0.009250608272850513, 0.010430321097373962, 0.005608218256384134, -0.019648730754852295, 0.08186069130897522, 0.045094333589076996, 0.026076316833496094, -0.0743178054690361, -0.09034986793994904, 0.042768631130456924, -0.07595700770616531, 0.04614139720797539, 0.08046896755695343, -0.018502330407500267, -0.007975853979587555, 4.975208208168329e-34, -0.030168019235134125, -0.06164723262190819, 0.016271358355879784, 0.041337333619594574, 0.06701195240020752, -0.03420718014240265, -0.06924194097518921, -0.022875802591443062, -0.01227513700723648, -0.06829419732093811, 0.0010288616176694632, -0.1174018532037735, 0.09490487724542618, -0.060489799827337265, 0.056823719292879105, 0.029577279463410378, 0.059903260320425034, -0.05791502073407173, -0.07578107714653015, -0.004507311154156923, -0.03828693926334381, -0.04672199860215187, -0.06549620628356934, -0.029744606465101242, 0.018756652250885963, -0.042292747646570206, 0.009421193972229958, -0.041925396770238876, -0.08444066345691681, 0.02172430045902729, -0.03933313861489296, 0.03683706745505333, -0.029340844601392746, -0.013881747610867023, -0.09959786385297775, 0.07651729881763458, -0.11965689063072205, 0.03815493360161781, 0.04805063083767891, 0.04702209681272507, 0.04792388901114464, -0.03367528319358826, 0.0022303801961243153, 0.13848866522312164, -0.024015283212065697, 0.02512357383966446, -0.03509267792105675, -0.012127572670578957, 0.020960412919521332, 0.03073081560432911, -0.027889259159564972, -0.08352017402648926, -0.049075931310653687, -0.01328463014215231, 0.10047747194766998, -0.03805170953273773, -0.0028393990360200405, -0.020920224487781525, 0.01755720004439354, 0.02757532335817814, 0.08287446200847626, 0.057720936834812164, -0.04557601362466812, 0.01232061441987753, 0.028789259493350983, -0.006009326782077551, -0.02823539637029171, -0.048674076795578, 0.0009905693586915731, 0.04177063703536987, 0.10750693082809448, 0.02499108947813511, -0.052111245691776276, 0.08769987523555756, -0.04898141697049141, -0.04116719588637352, -0.1507198065519333, -0.003879508236423135, -0.04918717220425606, -0.09980523586273193, -0.014415951445698738, -0.026118440553545952, -0.0196423027664423, -0.011434950865805149, 0.06725680083036423, 0.062475383281707764, 0.019275572150945663, -0.027583789080381393, 0.03036908619105816, 0.0143638476729393, 0.03844422101974487, 0.021669818088412285, -0.007627065293490887, -0.11384318768978119, -0.02170335315167904, -1.4086682931235828e-08, 0.06851837784051895, -0.016751375049352646, -0.05802666395902634, -0.06437156349420547, 0.01051785796880722, -0.006943414453417063, -0.019769586622714996, 0.006765911355614662, -0.04963044077157974, -0.014885489828884602, 0.06940214335918427, 0.09911838173866272, 0.07270493358373642, 0.037077900022268295, -0.012204107828438282, -0.0003307904116809368, 0.05022155120968819, 0.060363851487636566, -0.036697741597890854, -0.01177425216883421, 0.009111867286264896, 0.01953815296292305, 0.021939557045698166, -0.0884648784995079, 0.027647649869322777, -0.020199794322252274, -0.084590382874012, 0.08179130405187607, -0.025821955874562263, -0.09324569255113602, 0.04236297681927681, 0.0630505234003067, -0.08977457880973816, -0.08333291858434677, -0.03007023222744465, 0.009301479905843735, -0.009618639945983887, 0.012050064280629158, -0.05253586173057556, -0.10398352146148682, 0.004611324053257704, 0.0198307354003191, 0.0423288457095623, -0.021351253613829613, -0.06785394251346588, -0.03373369574546814, 0.07334491610527039, -0.036009859293699265, 0.03158429637551308, -0.06996645778417587, -0.045129191130399704, -0.042537327855825424, 0.020768266171216965, 0.03063562698662281, 0.005492263939231634, 0.045624420046806335, -0.015152400359511375, 0.012263217940926552, -0.04257315397262573, -0.015950525179505348, 0.02805173769593239, -0.06004081666469574, 0.01793057471513748, -0.054265085607767105)"


# sql = f"INSERT INTO movies (id, title, embedding) VALUES ({id}, '{title}', {embedding})"

# cursor.execute(sql)

# conn.commit()

# cursor.close()
# conn.close()

# print("Data inserted successfully.")

